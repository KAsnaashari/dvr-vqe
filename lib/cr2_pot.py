import numpy as np

cr2_pot_points = {
    13: (np.array([2.8, 3.2, 3.6, 4.0, 4.4, 4.8, 5.2, 5.6, 6.0, 6.4, 6.8, 7.2, 7.6, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0,19.0, 20.0, 22.0, 24.0, 28.0, 32.0,36.0, 40.0]), 
        np.array([0.67552926, 0.31501986, 0.14958630,0.06919692, 0.02969746, 0.01078163,0.00220965,-0.00130615,-0.00246418,-0.00260572,-0.00236842,-0.00203361,-0.00171042, 
                -0.00143115,-0.00091983,-0.00059091,-0.00037547,-0.00023687,-0.00014985,-0.00009598,-0.00006266,-0.00004184,-0.00002860,-0.00001998,-0.00001424,-0.00001033,
                -0.00000568,-0.00000329,-0.00000126,-0.00000056,-0.00000027,-0.00000014])), 
    11: (np.array([4.0, 4.4, 4.8, 5.2, 5.6, 6.0, 6.4, 6.8, 7.2, 7.6, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 22.0, 24.0, 28.0, 32.0, 36.0, 40.0]), 
        np.array([0.03846903,  0.00115571, -0.01372784, -0.01714698, -0.01550925, -0.01241146, -0.00945876, -0.00708510, -0.00528819, -0.00395937, -0.00298425, -0.00152702,
        -0.00082116, -0.00045986, -0.00026684,-0.00016021, -0.00009948, -0.00006381,-0.00004221, -0.00002871, -0.00002001,-0.00001424, -0.00001033, -0.00000568,-0.00000329, 
        -0.00000125, -0.00000055,-0.00000027, -0.00000014])), 
     9: (np.array([3.2, 3.6, 4.0, 4.4, 4.6, 4.8, 5.0, 5.2, 5.4, 5.6, 6.0, 6.4, 6.8, 7.2, 7.6, 8.0, 9.0, 10.0, 11.0, 12.0,13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 22.0, 24.0, 28.0, 32.0, 36.0, 40.0]), 
        np.array([0.13639056,0.06180870,0.01106203,-0.01391763, -0.02003153, -0.02335603, -0.02466775, -0.02456626, -0.02351089, -0.02185938, -0.01777206, -0.01370245, -0.01026327, 
        -0.00758735, -0.00558870, -0.00412355, -0.00197436, -0.00098863, -0.00052001, -0.00028772, -0.00016726, -0.00010181, -0.00006457, -0.00004246, -0.00002879, -0.00002004, 
        -0.00001426, -0.00001034, -0.00000568, -0.00000329, -0.00000126, -0.00000056, -0.00000027, -0.00000014])), 
     7: (np.array([3.6, 4.0, 4.2, 4.4, 4.6, 4.8, 5.0, 5.2, 5.4, 5.6, 6.0, 6.4, 6.8, 7.2, 7.6, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 22.0, 24.0, 28.0, 32.0, 36.0, 40.0]), 
        np.array([0.01845174,-0.01129445,-0.01969547,-0.02521738, -0.02845348, -0.02989864, -0.02998507, -0.02907904, -0.02748625, -0.02545686, -0.02082943, -0.01627548, -0.01233617, 
        -0.00918101, -0.00676863, -0.00497304, -0.00231831, -0.00111734, -0.00056560, -0.00030324, -0.00017238, -0.00010346, -0.00006508, -0.00004261, -0.00002884, -0.00002005, -0.00001426, 
        -0.00001032, -0.00000568, -0.00000328, -0.00000125, -0.00000055, -0.00000027, -0.00000014])), 
     5: (np.array([3.2, 3.6, 4.0, 4.4, 4.6, 4.8, 5.0, 5.2, 5.4, 5.6, 6.0, 6.4, 6.8, 7.2, 7.6, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 22.0, 24.0, 28.0, 32.0, 36.0, 40.0]), 
        np.array([0.01544102,-0.02049410,-0.02938535,-0.03390195, -0.03475122, -0.03465450, -0.03373828, -0.03217373, -0.03014110, -0.02780800, -0.02278314, -0.01793125, -0.01370545, -0.01026782, 
        -0.00759765, -0.00558366, -0.00257344, -0.00121343, -0.00059953, -0.00031465, -0.00017613, -0.00010465, -0.00006547, -0.00004274, -0.00002889, -0.00002007, -0.00001427, -0.00001034, -0.00000569, 
        -0.00000329, -0.00000126, -0.00000056, -0.00000029, -0.00000015])), 
     3: (np.array([2.8, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.2, 4.4, 4.8, 5.2, 5.6, 6.0, 6.4, 6.8, 7.2, 7.6, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 22.0, 24.0, 28.0, 32.0, 36.0,40.0]), 
        np.array([0.03740697,-0.00003129,-0.03270087,-0.04326921, -0.04567928, -0.04414500, -0.04209704, -0.04077125, -0.03992384, -0.03784166, -0.03417336, -0.02928173, -0.02398577, -0.01894649, 
        -0.01455243, -0.01095147, -0.00812771, -0.00598035, -0.00274320, -0.00127791, -0.00062226, -0.00032230, -0.00017861, -0.00010544, -0.00006571, -0.00004281, -0.00002890, -0.00002006, -0.00001427, 
        -0.00001034, -0.00000570, -0.00000329, -0.00000127, -0.00000056, -0.00000028, -0.00000016])), 
     1: (np.array([2.6, 2.8, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.8, 4.0, 4.4, 4.8, 5.2, 5.6, 6.0, 6.4, 6.8, 7.2, 7.6, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 22.0, 24.0, 28.0, 32.0, 36.0, 40.0]), 
        np.array([0.06884185,-0.01724794,-0.05498194,-0.06407746, -0.06905993, -0.07103078, -0.07049441, -0.06732156, -0.06256050, -0.05430290, -0.04885578, -0.04308324, -0.03947988, -0.03517762, 
        -0.03000569, -0.02456791, -0.01943544, -0.01496124, -0.01128320, -0.00838721, -0.00617608, -0.00282822, -0.00131037, -0.00063370, -0.00032615, -0.00017980, -0.00010581, -0.00006582, -0.00004284, 
        -0.00002890, -0.00002006, -0.00001426, -0.00001033, -0.00000567, -0.00000328, -0.00000126, -0.00000055, -0.00000026, -0.00000014]))
}

def pot_fun(r, lims, interp_f):
   if type(r) is not np.ndarray:
      r = np.array([r])
   out = np.zeros(r.shape)
   out[r < lims[0]] = interp_f(lims[0])
   out[r >= lims[0]] = interp_f(r[r >= lims[0]])
   return out

def get_pot_cr2(s):
   from scipy.interpolate import interp1d

   rs = cr2_pot_points[s][0]
   lims = rs[0], rs[-1]
   ps = cr2_pot_points[s][1]
   return lambda r: pot_fun(r, lims, interp1d(rs, ps, kind='cubic')), lims
